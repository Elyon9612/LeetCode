class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> result;
        
        vector<int> degree(numCourses);
        vector<vector<int>> table(numCourses);
        int number = 0;
        for(auto a:prerequisites){
            table[a[1]].push_back(a[0]);
            degree[a[0]] ++;
        }
        
        queue<int> q;
        for(int i=0;i<degree.size();i++){
            if(degree[i] == 0)
                q.push(i);
        }
        
        while(!q.empty()){
            int cur = q.front();
            q.pop();
            number ++;
            result.push_back(cur);
            for(auto neib:table[cur]){
                degree[neib] --;
                if(degree[neib] == 0){
                    q.push(neib);
                }
            }
        }
        if(number != numCourses)
            return {};
        return result;
    }
};