class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        if(grid.size() == 0) return 0;
        
        int n = grid.size();
        int m = grid[0].size();
        int result = 0;
        
        for(int i=0;i<n;i++){
            for(int j = 0;j<m;j++){
                if(grid[i][j] == '1'){
                    
                    bfs(grid,i,j);
                    result ++;
                }
            }
        }
        return result;
    }
    void bfs(vector<vector<char>>& grid,int i,int j){
        //检查边界
        if(i<0 || i>=grid.size() || j<0 || j>=grid[0].size() || grid[i][j] == '0')
            return;
        grid[i][j] = '0';
        
        int row[4] = {1,-1,0,0};
        int col[4] = {0,0,1,-1};
        
        for(int z=0;z<4;z++){
            int x = i + row[z];
            int y = j + col[z];
            bfs(grid,x,y); 
        }
    }
};