class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        unordered_map<int,int> table;
        for(int i=0;i<numbers.size();i++){
            table[numbers[i]] = i;
        }
        
        vector<int> result;
        for(int i=0;i<numbers.size();i++){
            int last = target - numbers[i];
            if(table.find(last) != table.end() && i != table[last]){
                result.push_back(i+1);
                result.push_back(table[last] + 1);
                return result;
            }
        }
        return result;
    }
};

//Double pointer method
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int l = 0;
        int r = numbers.size()-1;
        while(l < r){
            if(numbers[l] + numbers[r] == target){
                return {l+1,r+1};
            }
            else if(numbers[l] + numbers[r] > target)
                r --;
            else
                l ++;
        }
        return {};
    }
};